# Generated by Django 3.1.5 on 2021-02-14 21:31

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('change', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='assignedmilestonechange',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='assigneechange',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='closecommitreference',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='comment',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='commitreference',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='descriptionchange',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='duedatechange',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='labelchange',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='milestonechange',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='prioritychange',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='startdatechange',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='statechange',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='statuschange',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='taskchange',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelManagers(
            name='assignedmilestonechange',
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='assigneechange',
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='closecommitreference',
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='comment',
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='commitreference',
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='descriptionchange',
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='duedatechange',
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='labelchange',
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='milestonechange',
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='prioritychange',
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='startdatechange',
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='statechange',
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='statuschange',
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='taskchange',
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.RemoveField(
            model_name='milestonechange',
            name='change_type',
        ),
        migrations.RemoveField(
            model_name='milestonechange',
            name='description',
        ),
        migrations.RemoveField(
            model_name='milestonechange',
            name='id',
        ),
        migrations.RemoveField(
            model_name='milestonechange',
            name='timestamp',
        ),
        migrations.RemoveField(
            model_name='taskchange',
            name='change_type',
        ),
        migrations.RemoveField(
            model_name='taskchange',
            name='description',
        ),
        migrations.RemoveField(
            model_name='taskchange',
            name='id',
        ),
        migrations.RemoveField(
            model_name='taskchange',
            name='timestamp',
        ),
        migrations.CreateModel(
            name='Change',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(choices=[('Update', 'Update'), ('Create', 'Create'), ('Delete', 'Delete')], default='Update', max_length=20)),
                ('description', models.TextField(blank=True, default='')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_change.change_set+', to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['-timestamp'],
                'base_manager_name': 'non_polymorphic',
            },
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='milestonechange',
            name='change_ptr',
            field=models.OneToOneField(auto_created=True, default='', on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='change.change'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='taskchange',
            name='change_ptr',
            field=models.OneToOneField(auto_created=True, default='', on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='change.change'),
            preserve_default=False,
        ),
    ]
