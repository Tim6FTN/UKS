version: '3.2'

services:
  web:
    container_name: tim6uks_web
    image: tim6uks_backend:latest
    build:
        context: ./backend
        dockerfile: Dockerfile
    command: ["./wait_for_postgres.sh"]
    ports:
      - 8000:8000
    volumes:
      - ./backend/static:/code/static
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    depends_on:
      - db
#      - es
#      - kibana
#    links:
#      - redis
  db:
    restart: always
    image: postgres
    container_name: myapp_db
    volumes:
      - ../pgdata:/var/lib/postgresql/data
    ports:
      - 5432
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
  nginx:
    image: nginx:latest
    container_name: uks_nginx
    ports:
      - 1234:8000
    volumes:
      - ./backend/config/nginx:/etc/nginx/conf.d
      - ./backend/static:/code/static
      - ../logs:/var/log/nginx
    depends_on:
      - web
#      - kibana

  nextjs:
    image: tim6uks_frontend:latest
    container_name: tim6uks_frontend
    build:
        context: ./frontend
        dockerfile: Dockerfile
    command: ["npm", "start"]
    ports:
      - 3000:3000
      
#  es:
#    labels:
#      com.example.service: "es"
#      com.example.description: "For searching and indexing data"
#    image: elasticsearch:5.4
#    container_name: myapp_es
#    volumes:
#      - ./esdata:/usr/share/elasticsearch/data/
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    environment:
#      ES_JAVA_OPTS: "-Xmx256m -Xms256m"

#  kibana:
#    labels:
#      com.example.service: "kibana"
#      com.example.description: "Data visualisation and for log aggregation"
#    image: kibana:5.4.3
#    container_name: myapp_kibana
#    ports:
#      - "5601:5601"
#    environment:
#      - ELASTICSEARCH_URL=http://es:9200
#    depends_on:
#      - es

#  logstash:
#    labels:
#      com.example.service: "logstash"
#      com.example.description: "For logging data"
#    image: logstash:5.4.3
#    container_name: myapp_logstash
#    volumes:
#      - ./backend/config/logstash:/logstash_dir
#    command: logstash -f /logstash_dir/logstash.conf
#    depends_on:
#      - es
#    environment:
#      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
#    ports:
#      - "5959:5959"
      
#  influxdb:
#    container_name: myapp_influxdb
#    image: influxdb:1.0.2
#    ports:
#      - "8083:8083"
#      - "8086:8086"
#    volumes:
#      - ./influxdb:/var/lib/influxdb
#    restart: always
#
#  grafana:
#    container_name: myapp_grafana
#    image: grafana/grafana:4.3.2
#    ports:
#      - "3001:3000"
#    links:
#      - influxdb
#    restart: always
#
#  telegraf:
#    container_name: myapp_telegraf
#    image: telegraf:1.3.3
#    volumes:
#      - ./backend/config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
#      - /var/run/docker.sock:/var/run/docker.sock
#    restart: always
#    
#  redis:
#    image: redis
#    container_name: myapp_redis
#    expose:
#      - '6379'
